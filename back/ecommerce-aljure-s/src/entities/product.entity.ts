import { Column, Entity, JoinColumn, ManyToMany, ManyToOne, OneToMany, PrimaryGeneratedColumn } from "typeorm";
import { Categories } from "./categories.entity";
import { OrderDetails } from "./oderDetails.entity";
import { ApiProperty } from "@nestjs/swagger";


@Entity({
    name: 'PRODUCTS'
})
export class Product {
    @ApiProperty({
        description: 'The id of the Product, generated by the database',
    })
    @PrimaryGeneratedColumn('uuid')
    id: string;

    @ApiProperty({
        description: 'The name of the product',
    })
    @Column({
        length: 20,
        unique: true,
        type: 'varchar',
        nullable: false, 
    })
    name: string;

    @ApiProperty({
        description: 'The description of the product',
    })
    @Column({
        type: 'text',
        nullable: false,
    })
    description: string; 

    @ApiProperty({
        description: 'The price tag of the product',
    })
    @Column({type: 'decimal', precision: 10/*10 digitos*/, scale: 2 /*2 decimales*/, nullable: false})
    price: number;

    @ApiProperty({
        description: 'The stock of the product',
    })
    @Column('int')
    stock: number;

    @ApiProperty({
        description: 'The image url of the product',
    })
    @Column({ 
        default: 'https://via.placeholder.com/400x400.png?text=No+Image', 
    })
    imgUrl: string;

    @ApiProperty({
        description: 'The category of the product',
    })
    @ManyToOne(() => Categories, category => category.products)
    @JoinColumn({name: 'category_id'})
    category: Categories

    @ApiProperty({
        description: 'The order details of the product',
    })
    @ManyToMany(() => OrderDetails, orderDetails => orderDetails.products)
    orderDetails: OrderDetails[]


}

